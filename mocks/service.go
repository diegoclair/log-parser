// Code generated by MockGen. DO NOT EDIT.
// Source: application/contract/service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockQuakeService is a mock of QuakeService interface.
type MockQuakeService struct {
	ctrl     *gomock.Controller
	recorder *MockQuakeServiceMockRecorder
}

// MockQuakeServiceMockRecorder is the mock recorder for MockQuakeService.
type MockQuakeServiceMockRecorder struct {
	mock *MockQuakeService
}

// NewMockQuakeService creates a new mock instance.
func NewMockQuakeService(ctrl *gomock.Controller) *MockQuakeService {
	mock := &MockQuakeService{ctrl: ctrl}
	mock.recorder = &MockQuakeServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockQuakeService) EXPECT() *MockQuakeServiceMockRecorder {
	return m.recorder
}

// StartExtractingData mocks base method.
func (m *MockQuakeService) StartExtractingData(ctx context.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "StartExtractingData", ctx)
}

// StartExtractingData indicates an expected call of StartExtractingData.
func (mr *MockQuakeServiceMockRecorder) StartExtractingData(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartExtractingData", reflect.TypeOf((*MockQuakeService)(nil).StartExtractingData), ctx)
}
